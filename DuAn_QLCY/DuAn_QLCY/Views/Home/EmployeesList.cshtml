@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IEnumerable<DuAn_QLCY.Models.Employee>

@{
	ViewData["Title"] = "EmployeesList";
}

<h1>EmployeesList</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.EmployeeId)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.FirstName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LastName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Position)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Email)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.PhoneNumber)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.DayOfBirth)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Gender)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.JoiningDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Nationality)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Address)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Department)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Type)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.EmployeeId)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FirstName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Position)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Email)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PhoneNumber)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.DayOfBirth)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Gender)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.JoiningDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Nationality)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Address)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Department.DepartmentId)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Type.TypeId)
				</td>
				<td>
					<a asp-action="Edit" asp-route-id="@item.EmployeeId">Edit</a> |
					<a asp-action="Details" asp-route-id="@item.EmployeeId">Details</a> |
					<a asp-action="Delete" asp-route-id="@item.EmployeeId">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("EmployeesList"
			,
			new { page = page }),
			new X.PagedList.Mvc.Core.PagedListRenderOptions
		{
			ContainerDivClasses = new[] { "navigation" },
			LiElementClasses = new[] { "page-item" },
			PageClasses = new[] { "page-link" }
		}
			)