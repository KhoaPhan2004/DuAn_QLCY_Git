@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<DuAn_QLCY.Models.Employee>

@{
    ViewData["Title"] = "Employees List";
}

<h1 class="text-center mt-4 animated-title">Employees List</h1>

<div class="d-flex justify-content-between align-items-center mb-3">
    <a asp-action="CreateEmployees" class="btn btn-primary btn-large">
        <i class="fas fa-plus-circle"></i> Create New
    </a>
</div>


<div class="table-responsive">
    <table class="table table-bordered table-hover shadow-sm">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().EmployeeId)</th>
                <th>@Html.DisplayNameFor(model => model.First().FirstName)</th>
                <th>@Html.DisplayNameFor(model => model.First().LastName)</th>
                <th>@Html.DisplayNameFor(model => model.First().Position)</th>
                <th>@Html.DisplayNameFor(model => model.First().Email)</th>
                <th>@Html.DisplayNameFor(model => model.First().PhoneNumber)</th>
                <th>@Html.DisplayNameFor(model => model.First().DayOfBirth)</th>
                <th>@Html.DisplayNameFor(model => model.First().Gender)</th>
                <th>@Html.DisplayNameFor(model => model.First().JoiningDate)</th>
                <th>@Html.DisplayNameFor(model => model.First().Nationality)</th>
                <th>@Html.DisplayNameFor(model => model.First().Address)</th>
                <th>@Html.DisplayNameFor(model => model.First().Department.DepartmentName)</th>
                <th>@Html.DisplayNameFor(model => model.First().Type.TypeName)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.EmployeeId)</td>
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Position)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.DayOfBirth)</td>
                    <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                    <td>@Html.DisplayFor(modelItem => item.JoiningDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.Nationality)</td>
                    <td>@Html.DisplayFor(modelItem => item.Address)</td>
                    <td>@Html.DisplayFor(modelItem => item.Department.DepartmentName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Type.TypeName)</td>
                    <td class="d-flex gap-1 justify-content-center">
                        <a asp-action="UpdateEmployees" asp-route-id="@item.EmployeeId" class="btn btn-warning btn-xs action-btn">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-action="DetailEmployees" asp-route-id="@item.EmployeeId" class="btn btn-info btn-xs action-btn">
                            <i class="fas fa-info-circle"></i> Details
                        </a>
                        <a asp-action="DeleteEmployees" asp-route-id="@item.EmployeeId" class="btn btn-danger btn-xs action-btn">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("EmployeesList", new { page }),
            new X.PagedList.Mvc.Core.PagedListRenderOptions
    {
        ContainerDivClasses = new[] { "pagination-container" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link", "rounded" }
    })
</div>

