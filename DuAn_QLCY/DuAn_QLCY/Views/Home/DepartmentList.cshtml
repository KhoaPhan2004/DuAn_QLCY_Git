@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IEnumerable<DuAn_QLCY.Models.Department>

@{
    ViewData["Title"] = "DepartmentList";
}

<h1>DepartmentList</h1>

<p>
    <a asp-action="CreateDepartment">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DepartmentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActiveFrom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActiveTo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DepartmentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActiveFrom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActiveTo)
            </td>
            <td>
                    <a asp-action="UpdateDepartment" asp-route-id="@item.DepartmentId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.DepartmentId">Details</a> |
                    <a asp-action="DeleteDepartment" asp-route-id="@item.DepartmentId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("DepartmentList"
                ,
                new { page = page }),
                new X.PagedList.Mvc.Core.PagedListRenderOptions
            {
                ContainerDivClasses = new[] { "navigation" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" }
            }
                )